@{
    ViewData["Title"] = "Dashboard";
}
<script>
    console.log("Status Data: ", @Html.Raw(Json.Serialize(ViewData["StatusData"])));
    console.log("Revenue Data: ", @Html.Raw(Json.Serialize(ViewData["RevenueData"])));
</script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>

@* Include Bootstrap CSS *@
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />

<div class="container mt-4">
    <h2 class="text-center" id="LibraryManagementDashboard">Library Management Dashboard</h2>

    <div class="row">
        <!-- Status Chart -->
        <div class="col-md-6">
            <h3 id="StatusData">Status Data</h3>
            <canvas id="statusChart" style="width: 100%; height: 300px;"></canvas>
        </div>

        <!-- Revenue Chart -->
        <div class="col-md-6">
            <h3 id="RevenueData">Revenue Data</h3>
            <canvas id="revenueChart" style="width: 100%; height: 300px;"></canvas>
        </div>
    </div>

    <div class="row mt-4">
        <!-- Status Table (Optional) -->
        <div class="col-md-6">
            <h3 id="StatusDataTable">Status Data Table </h3>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th id="Status">Status</th>
                        <th id="Count">Count</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var status in (List<StatusGroup>)ViewData["StatusData"])
                    {
                        <tr>
                            <td>@status.Status</td>
                            <td>@status.Count</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Revenue Table (Optional) -->
        <div class="col-md-6">
            <h3 id="RevenueDataTable">Revenue Data Table </h3>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th id="S">Status</th>
                        <th id="Revenue">Revenue</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var revenue in (List<RevenueGroup>)ViewData["RevenueData"])
                    {
                        <tr>
                            <td>@revenue.Status</td>
                            <td>@revenue.Revenue</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@* Chart.js Script to draw the charts *@
<script>
    window.onload = function() {
        try {
            // Data for Status Chart
            var statusData = @Html.Raw(Json.Serialize(ViewData["StatusData"]));
            var statusLabels = statusData.map(function (item) { return item.status; });
            var statusCounts = statusData.map(function (item) { return item.count; });

            // Status Chart
            var ctxStatus = document.getElementById('statusChart').getContext('2d');
            var statusChart = new Chart(ctxStatus, {
                type: 'pie',  // Pie chart for Status
                data: {
                    labels: statusLabels,
                    datasets: [{
                        label: 'Book Statuses',
                        data: statusCounts,
                        backgroundColor: ['green', 'yellow', 'red'], // Colors for Available, Rented, Sold
                        borderColor: '#ffffff',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true
                }
            });

            // Data for Revenue Chart
            var revenueData = @Html.Raw(Json.Serialize(ViewData["RevenueData"]));
            var revenueLabels = revenueData.map(function (item) { return item.status; });
            var revenueValues = revenueData.map(function (item) { return item.revenue; });

            // Revenue Chart
            var ctxRevenue = document.getElementById('revenueChart').getContext('2d');
            var revenueChart = new Chart(ctxRevenue, {
                type: 'bar',  // Bar chart for Revenue
                data: {
                    labels: revenueLabels,
                    datasets: [{
                        label: 'Revenue',
                        data: revenueValues,
                        backgroundColor: ['blue', 'gray'], // Colors for Sold and Rented
                        borderColor: '#000000',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        x: {
                            beginAtZero: true
                        },
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        } catch (error) {
            console.error("Error in rendering chart:", error);
        }
    };
</script>
