@{
    ViewData["Title"] = "Dashboard";
}
<script>
    console.log("Status Data: ", @Html.Raw(Json.Serialize(ViewData["StatusData"])));
    console.log("Revenue Data: ", @Html.Raw(Json.Serialize(ViewData["RevenueData"])));
</script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
<head>
    <style>
        /* Apply a background image to the body */
        body {
            background-image: url('/images/Dashboard.jpg'); /* Update the path to match your image location */
            background-size: cover; /* Make sure the image covers the entire page */
            background-position: center; /* Center the image */
            background-repeat: no-repeat; /* Prevent tiling */
            height: 100vh; /* Fit the viewport height */
            margin: 0; /* Remove default margins */
            font-family: Arial, sans-serif; /* Optional: Set a clean font */
        }

          /* Style the main content to make it readable */
        .content {
            background-color: rgba(0, 0, 0, 0.5) !important; /* Semi-transparent white background */
            padding: 20px;
            border-radius: 8px;
            margin: 20px auto;
            max-width: 80%; /* Adjust the width as needed */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Add a subtle shadow */
             color: darkgoldenrod !important;
        }
        /* Table Header Styling */
table th {
  background-color: rgba(0, 0, 0, 0.2); /* Slight dark background */
  color: darkgoldenrod !important; /* Dark gold text */
  text-align: center;
  padding: 10px;
}

/* Table Body Styling */
table td {
  color: darkgoldenrod !important; /* Dark gold text */
  text-align: center;
  padding: 8px;
}

/* Table Styling */
table.table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 20px;
}

/* Border for Tables */
table.table-bordered th, table.table-bordered td {
  border: 1px solid darkgoldenrod; /* Dark gold border */
}

/* Hover Effect on Table Rows */
table tbody tr:hover {
  background-color: rgba(255, 223, 0, 0.1); /* Light gold background on hover */
}

/* Table Title Styling */
h3 {
  color: darkgoldenrod; /* Dark gold text for table titles */
  font-weight: bold;
  margin-bottom: 15px;
}

   
    </style>
</head>

@* Include Bootstrap CSS *@
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
<div class="content">
<div class="container mt-4">
    <h2 class="text-center" id="LibraryManagementDashboard"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clipboard2-data-fill" viewBox="0 0 16 16">
  <path d="M10 .5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5.5.5 0 0 1-.5.5.5.5 0 0 0-.5.5V2a.5.5 0 0 0 .5.5h5A.5.5 0 0 0 11 2v-.5a.5.5 0 0 0-.5-.5.5.5 0 0 1-.5-.5"/>
  <path d="M4.085 1H3.5A1.5 1.5 0 0 0 2 2.5v12A1.5 1.5 0 0 0 3.5 16h9a1.5 1.5 0 0 0 1.5-1.5v-12A1.5 1.5 0 0 0 12.5 1h-.585q.084.236.085.5V2a1.5 1.5 0 0 1-1.5 1.5h-5A1.5 1.5 0 0 1 4 2v-.5q.001-.264.085-.5M10 7a1 1 0 1 1 2 0v5a1 1 0 1 1-2 0zm-6 4a1 1 0 1 1 2 0v1a1 1 0 1 1-2 0zm4-3a1 1 0 0 1 1 1v3a1 1 0 1 1-2 0V9a1 1 0 0 1 1-1"/>
</svg> Library Management Dashboard</h2>

    <div class="row">
        <!-- Status Chart -->
        <div class="col-md-6">
            <h3 id="StatusData">Status Data <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pie-chart" viewBox="0 0 16 16">
  <path d="M7.5 1.018a7 7 0 0 0-4.79 11.566L7.5 7.793zm1 0V7.5h6.482A7 7 0 0 0 8.5 1.018M14.982 8.5H8.207l-4.79 4.79A7 7 0 0 0 14.982 8.5M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8"/>
</svg></h3>
            <canvas id="statusChart" style="width: 100%; height: 300px;"></canvas>
        </div>

        <!-- Revenue Chart -->
        <div class="col-md-6">
            <h3 id="RevenueData">Revenue Data <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bar-chart" viewBox="0 0 16 16">
  <path d="M4 11H2v3h2zm5-4H7v7h2zm5-5v12h-2V2zm-2-1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM6 7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm-5 4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1z"/>
</svg></h3>
            <canvas id="revenueChart" style="width: 100%; height: 300px;"></canvas>
        </div>
    </div>

    <div class="row mt-4">
        <!-- Status Table (Optional) -->
        <div class="col-md-6">
            <h3 id="StatusDataTable">Status Data Table <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-table" viewBox="0 0 16 16">
  <path d="M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm15 2h-4v3h4zm0 4h-4v3h4zm0 4h-4v3h3a1 1 0 0 0 1-1zm-5 3v-3H6v3zm-5 0v-3H1v2a1 1 0 0 0 1 1zm-4-4h4V8H1zm0-4h4V4H1zm5-3v3h4V4zm4 4H6v3h4z"/>
</svg> </h3>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th id="Ss">Status</th>
                        <th id="Count">Count</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var status in (List<StatusGroup>)ViewData["StatusData"])
                    {
                        <tr>
                            <td>@status.Status</td>
                            <td>@status.Count</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Revenue Table (Optional) -->
        <div class="col-md-6">
            <h3 id="RevenueDataTable">Revenue Data Table <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-table" viewBox="0 0 16 16">
  <path d="M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm15 2h-4v3h4zm0 4h-4v3h4zm0 4h-4v3h3a1 1 0 0 0 1-1zm-5 3v-3H6v3zm-5 0v-3H1v2a1 1 0 0 0 1 1zm-4-4h4V8H1zm0-4h4V4H1zm5-3v3h4V4zm4 4H6v3h4z"/>
</svg></h3>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th id="S">Status</th>
                        <th id="Revenue">Revenue</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var revenue in (List<RevenueGroup>)ViewData["RevenueData"])
                    {
                        <tr>
                            <td>@revenue.Status</td>
                            <td>@revenue.Revenue</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
</div>
@* Chart.js Script to draw the charts *@
<script>
    window.onload = function() {
        try {
            // Data for Status Chart
            var statusData = @Html.Raw(Json.Serialize(ViewData["StatusData"]));
            var statusLabels = statusData.map(function (item) { return item.status; });
            var statusCounts = statusData.map(function (item) { return item.count; });

            // Status Chart
            var ctxStatus = document.getElementById('statusChart').getContext('2d');
            var statusChart = new Chart(ctxStatus, {
                type: 'pie',  // Pie chart for Status
                data: {
                    labels: statusLabels,
                    datasets: [{
                        label: 'Book Statuses',
                        data: statusCounts,
                        backgroundColor: ['darkgreen', 'darkgoldenrod', 'darkred'], // Colors for Available, Rented, Sold
                        borderColor: '#ffffff',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true
                }
            });

            // Data for Revenue Chart
            var revenueData = @Html.Raw(Json.Serialize(ViewData["RevenueData"]));
            var revenueLabels = revenueData.map(function (item) { return item.status; });
            var revenueValues = revenueData.map(function (item) { return item.revenue; });

            // Revenue Chart
            var ctxRevenue = document.getElementById('revenueChart').getContext('2d');
            var revenueChart = new Chart(ctxRevenue, {
                type: 'bar',  // Bar chart for Revenue
                data: {
                    labels: revenueLabels,
                    datasets: [{
                        label: 'Revenue',
                        data: revenueValues,
                        backgroundColor: ['blue', 'gray'], // Colors for Sold and Rented
                        borderColor: '#000000',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        x: {
                            beginAtZero: true
                        },
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        } catch (error) {
            console.error("Error in rendering chart:", error);
        }
    };
</script>
